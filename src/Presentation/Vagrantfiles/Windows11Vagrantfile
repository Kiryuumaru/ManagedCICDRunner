Vagrant.configure("2") do |config|
  config.vm.box = "gusztavvargadr/windows-11"
  config.vm.communicator = "winrm"
  config.vm.provision "shell", inline: <<-SHELL

    # Install git
    Invoke-WebRequest "https://github.com/git-for-windows/git/releases/download/v2.45.2.windows.1/MinGit-2.45.2-64-bit.zip" -OutFile "$env:TEMP\\mingit.zip" -UseBasicParsing;
    $git_sha256 = '7ed2a3ce5bbbf8eea976488de5416894ca3e6a0347cee195a7d768ac146d5290';
    if ((Get-FileHash "$env:TEMP\\mingit.zip" -Algorithm sha256).Hash -ne $git_sha256) {
      Write-Host 'CHECKSUM VERIFICATION FAILED!';
      exit 1;
    };
    Expand-Archive "$env:TEMP\\mingit.zip" -DestinationPath c:\\mingit;
    $env:PATH = $env:PATH + ";C:\\mingit\\cmd\\;C:\\mingit\\cmd";
    Set-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment\\' -Name Path -Value $env:PATH
    
    # Install gh-cli
    Invoke-WebRequest "https://github.com/cli/cli/releases/download/v2.54.0/gh_2.54.0_windows_amd64.zip" -OutFile "$env:TEMP\\gh-cli.zip" -UseBasicParsing;
    $gh_cli_sha256 = 'd3400b7e5c5a7f3912e8da606a2daf3376981d49f0ba0dea0337725eae25351d';
    if ((Get-FileHash "$env:TEMP\\gh-cli.zip" -Algorithm sha256).Hash -ne $gh_cli_sha256) {
      Write-Host 'CHECKSUM VERIFICATION FAILED!';
      exit 1;
    };
    Expand-Archive "$env:TEMP\\gh-cli.zip" -DestinationPath c:\\gh-cli;
    $env:PATH = $env:PATH + ";C:\\gh-cli\\bin\\;C:\\gh-cli\\bin";
    Set-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment\\' -Name Path -Value $env:PATH
    
    # Install docker
    $env:DOCKER_RELEASE = 161083
    Invoke-WebRequest "https://desktop.docker.com/win/main/amd64/$env:DOCKER_RELEASE/Docker%20Desktop%20Installer.exe" -OutFile "$env:TEMP\\docker-installer.exe" -UseBasicParsing;
    $docker_sha256 = 'ceaa6e6bad893685aa4c49d1d3b456cd7241731bfed4d61fde1e961673a175ce';
    if ((Get-FileHash "$env:TEMP\\docker-installer.exe" -Algorithm sha256).Hash -ne $docker_sha256) {
      Write-Host 'CHECKSUM VERIFICATION FAILED!';
      exit 1;
    };
    Start-Process "$env:TEMP\\docker-installer.exe" -NoNewWindow -Wait -ArgumentList 'install', '--accept-license', '--always-run-service'
    
    # Install az-cli
    $env:AZCLI_VERSION = 2.51.0
    Invoke-WebRequest "https://azcliprod.blob.core.windows.net/msi/azure-cli-$env:AZCLI_VERSION-x64.msi" -OutFile "$env:TEMP\\az-cli.msi" -UseBasicParsing;
    Start-Process msiexec.exe -NoNewWindow -Wait -ArgumentList '/i', "$env:TEMP\\az-cli.msi", '/quiet', '/norestart'
    
    # Install Visual Studio
    Invoke-WebRequest "https://aka.ms/vs/17/release/vs_community.exe" -OutFile "$env:TEMP\\vs_community.exe" -UseBasicParsing;
    & "$env:TEMP\vs_community.exe" --quiet --wait --norestart --noUpdateInstaller --includeRecommended `
      --add Microsoft.VisualStudio.Workload.Azure `
      --add Microsoft.VisualStudio.Workload.Data `
      --add Microsoft.VisualStudio.Workload.DataScience `
      --add Microsoft.VisualStudio.Workload.ManagedDesktop `
      --add Microsoft.VisualStudio.Workload.NativeCrossPlat `
      --add Microsoft.VisualStudio.Workload.NativeDesktop `
      --add Microsoft.VisualStudio.Workload.NativeMobile `
      --add Microsoft.VisualStudio.Workload.NetCrossPlat `
      --add Microsoft.VisualStudio.Workload.NetWeb `
      --add Microsoft.VisualStudio.Workload.Node `
      --add Microsoft.VisualStudio.Workload.Python `
      --add Microsoft.VisualStudio.Workload.Universal `
      --add Microsoft.VisualStudio.Workload.VisualStudioExtension `
      | Out-Default

  SHELL
end
